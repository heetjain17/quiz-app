/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as QuizQuizIdRouteImport } from './routes/quiz/$quizId'
import { Route as QuizQuizIdIndexRouteImport } from './routes/quiz/$quizId/index'
import { Route as QuizQuizIdResultsRouteImport } from './routes/quiz/$quizId/results'
import { Route as QuizQuizIdQuestionsRouteImport } from './routes/quiz/$quizId/questions'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizQuizIdRoute = QuizQuizIdRouteImport.update({
  id: '/quiz/$quizId',
  path: '/quiz/$quizId',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizQuizIdIndexRoute = QuizQuizIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => QuizQuizIdRoute,
} as any)
const QuizQuizIdResultsRoute = QuizQuizIdResultsRouteImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => QuizQuizIdRoute,
} as any)
const QuizQuizIdQuestionsRoute = QuizQuizIdQuestionsRouteImport.update({
  id: '/questions',
  path: '/questions',
  getParentRoute: () => QuizQuizIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/quiz/$quizId': typeof QuizQuizIdRouteWithChildren
  '/quiz/$quizId/questions': typeof QuizQuizIdQuestionsRoute
  '/quiz/$quizId/results': typeof QuizQuizIdResultsRoute
  '/quiz/$quizId/': typeof QuizQuizIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/quiz/$quizId/questions': typeof QuizQuizIdQuestionsRoute
  '/quiz/$quizId/results': typeof QuizQuizIdResultsRoute
  '/quiz/$quizId': typeof QuizQuizIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/quiz/$quizId': typeof QuizQuizIdRouteWithChildren
  '/quiz/$quizId/questions': typeof QuizQuizIdQuestionsRoute
  '/quiz/$quizId/results': typeof QuizQuizIdResultsRoute
  '/quiz/$quizId/': typeof QuizQuizIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/quiz/$quizId'
    | '/quiz/$quizId/questions'
    | '/quiz/$quizId/results'
    | '/quiz/$quizId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/quiz/$quizId/questions'
    | '/quiz/$quizId/results'
    | '/quiz/$quizId'
  id:
    | '__root__'
    | '/'
    | '/quiz/$quizId'
    | '/quiz/$quizId/questions'
    | '/quiz/$quizId/results'
    | '/quiz/$quizId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QuizQuizIdRoute: typeof QuizQuizIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz/$quizId': {
      id: '/quiz/$quizId'
      path: '/quiz/$quizId'
      fullPath: '/quiz/$quizId'
      preLoaderRoute: typeof QuizQuizIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz/$quizId/': {
      id: '/quiz/$quizId/'
      path: '/'
      fullPath: '/quiz/$quizId/'
      preLoaderRoute: typeof QuizQuizIdIndexRouteImport
      parentRoute: typeof QuizQuizIdRoute
    }
    '/quiz/$quizId/results': {
      id: '/quiz/$quizId/results'
      path: '/results'
      fullPath: '/quiz/$quizId/results'
      preLoaderRoute: typeof QuizQuizIdResultsRouteImport
      parentRoute: typeof QuizQuizIdRoute
    }
    '/quiz/$quizId/questions': {
      id: '/quiz/$quizId/questions'
      path: '/questions'
      fullPath: '/quiz/$quizId/questions'
      preLoaderRoute: typeof QuizQuizIdQuestionsRouteImport
      parentRoute: typeof QuizQuizIdRoute
    }
  }
}

interface QuizQuizIdRouteChildren {
  QuizQuizIdQuestionsRoute: typeof QuizQuizIdQuestionsRoute
  QuizQuizIdResultsRoute: typeof QuizQuizIdResultsRoute
  QuizQuizIdIndexRoute: typeof QuizQuizIdIndexRoute
}

const QuizQuizIdRouteChildren: QuizQuizIdRouteChildren = {
  QuizQuizIdQuestionsRoute: QuizQuizIdQuestionsRoute,
  QuizQuizIdResultsRoute: QuizQuizIdResultsRoute,
  QuizQuizIdIndexRoute: QuizQuizIdIndexRoute,
}

const QuizQuizIdRouteWithChildren = QuizQuizIdRoute._addFileChildren(
  QuizQuizIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QuizQuizIdRoute: QuizQuizIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
